trigger:
- main

variables:
  vmConnectionName: 'bookstore2'
  vmIpAddress: '40.76.124.247'
  projectName: 'BookStore'
  deployPath: '/home/azureuser/BookStore'

stages:
- stage: Deploy
  jobs:
  - deployment: DeployToVM
    environment: 'Production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: SSH@0
            inputs:
              sshEndpoint: '$(vmConnectionName)'
              runOptions: 'inline'
              inline: |
                # Fix permissions for the entire project directory
                sudo chown -R $USER:$USER $(deployPath)
                sudo chmod -R 755 $(deployPath)
                
                # Fix git directory permissions specifically
                sudo chown -R $USER:$USER $(deployPath)/.git
                sudo chmod -R 755 $(deployPath)/.git
                
                # Ensure .NET build directories have correct permissions
                find $(deployPath) -type d -name "obj" -exec sudo chmod -R 777 {} \;
                find $(deployPath) -type d -name "bin" -exec sudo chmod -R 777 {} \;
                
                # Configure git
                cd $(deployPath)
                sudo git config --global --add safe.directory $(deployPath)
                
                # Pull latest changes
                git pull origin main
                
                # Cleanup any existing build artifacts
                find . -type d -name "obj" -exec rm -rf {} +
                find . -type d -name "bin" -exec rm -rf {} +
                
                 # Stop existing service if running
                sudo systemctl stop $(projectName).service || true

                # Restore and build
                dotnet restore
                dotnet build --configuration Release

                # Reload systemd to apply changes
                sudo systemctl daemon-reload

                # Start the service
                sudo systemctl start $(projectName).service

                # Enable service to start on boot
                sudo systemctl enable $(projectName).service
              failOnStderr: false